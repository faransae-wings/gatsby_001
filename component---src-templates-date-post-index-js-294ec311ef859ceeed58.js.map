{"version":3,"file":"component---src-templates-date-post-index-js-294ec311ef859ceeed58.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/side-latest-post/style.jsx","webpack://gatsby-starter-default/./src/components/side-latest-post/index.jsx","webpack://gatsby-starter-default/./src/container/latest-post/style.jsx","webpack://gatsby-starter-default/./src/container/latest-post/index.jsx","webpack://gatsby-starter-default/./src/templates/date-post/style.js","webpack://gatsby-starter-default/./src/templates/date-post/index.js"],"sourcesContent":["import styled, { device } from \"@theme/utils\";\n\nexport const SingleLatestPost = styled.div`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    margin-top: 20px;\n`;\nexport const LatestPostThum = styled.div`\n    -webkit-flex-basis: 0 0 auto;\n    -ms-flex-preferred-size: 0 0 auto;\n    flex-basis: 0 0 auto;\n    min-width: 84px;\n    img {\n        border-radius: 10px;\n    }\n`;\nexport const LatestPostContent = styled.div`\n    margin-left: 20px;\n`;\nexport const Title = styled.h6`\n    margin-top: 0px;\n    font-size: 15px;\n`;\nexport const LatestPostMeta = styled.div`\n    font-size: 12px;\n    margin-top: 10px;\n`;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 6px;\n    i {\n        margin-right: 5px;\n    }\n`;\nexport const PostTime = styled.span``;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport {\n    SingleLatestPost,\n    LatestPostThum,\n    LatestPostContent,\n    Title,\n    LatestPostMeta,\n    PostDate,\n} from \"./style\";\n\nconst SideLatestPosts = ({ title, date, thume_image, slug, dateSlug }) => {\n    const image = getImage(thume_image);\n    return (\n        <SingleLatestPost>\n            <LatestPostThum>\n                <Link to={`/${slug}`}>\n                    <GatsbyImage image={image} alt=\"\" />\n                </Link>\n            </LatestPostThum>\n            <LatestPostContent>\n                <Title>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </Title>\n                <LatestPostMeta>\n                    <PostDate>\n                        <i className=\"icofont-ui-calendar\"></i>\n                        <Link to={`/date/${dateSlug}`}>{date}</Link>\n                    </PostDate>\n                </LatestPostMeta>\n            </LatestPostContent>\n        </SingleLatestPost>\n    );\n};\n\nexport default SideLatestPosts;\n","import styled, { device } from \"@theme/utils\";\n\nexport const LatestPostInnerWrap = styled.div`\n    margin-top: 40px;\n    padding: 30px 24px;\n    background: #fafafa;\n    border-radius: 10px;\n`;\nexport const LatestPostHeader = styled.div``;\nexport const LatestPostBox = styled.div``;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport SideLatestPosts from \"../../components/side-latest-post\";\nimport { LatestPostInnerWrap, LatestPostHeader, LatestPostBox } from \"./style\";\nconst LatestPostArea = (props) => {\n    const sideLatestPostsQuery = useStaticQuery(graphql`\n        query SideLatestPostsQuery {\n            latestPost: allMarkdownRemark(\n                sort: { fields: [frontmatter___date], order: DESC }\n                limit: 5\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            date(formatString: \"DD MMMM YYYY\")\n                            format\n                            is_featured\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 84\n                                        height: 84\n                                        quality: 100\n                                    )\n                                }\n                            }\n                        }\n                        fields {\n                            slug\n                            dateSlug\n                        }\n                    }\n                }\n            }\n        }\n    `);\n    const sideLatestPostsData = sideLatestPostsQuery.latestPost.edges;\n\n    return (\n        <LatestPostInnerWrap>\n            <LatestPostHeader>\n                <div className=\"section-title\">\n                    <h3>Latest Post</h3>\n                </div>\n            </LatestPostHeader>\n            <LatestPostBox>\n                {sideLatestPostsData &&\n                    sideLatestPostsData.map((latestPosts, i) => {\n                        return (\n                            <SideLatestPosts\n                                key={i}\n                                title={latestPosts.node.frontmatter.title}\n                                thume_image={\n                                    latestPosts.node.frontmatter.thume_image\n                                }\n                                date={latestPosts.node.frontmatter.date}\n                                dateSlug={latestPosts.node.fields.dateSlug}\n                                slug={latestPosts.node.fields.slug}\n                            />\n                        );\n                    })}\n            </LatestPostBox>\n        </LatestPostInnerWrap>\n    );\n};\n\nLatestPostArea.propTypes = {};\n\nexport default LatestPostArea;\n","import styled, { device } from \"@theme/utils\";\n\nexport const BlogDetailsArea = styled.section`\n    padding: 60px 0;\n    ${device.medium} {\n        padding: 80px 0;\n    }\n    ${device.large} {\n        padding: 80px 0;\n    }\n    ${device.xlarge} {\n        padding: 80px 0;\n    }\n`;\nexport const TagTitle = styled.h3`\n    margin-bottom: 30px;\n`;\nexport const BlogDetailsRightSidebar = styled.div`\n    margin-left: 0;\n    ${device.xlarge} {\n        margin-left: 40px;\n    }\n`;\nexport const BlogAddBanner = styled.div`\n    a {\n        display: block;\n        img {\n            width: 100% !important;\n        }\n    }\n`;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"@layout\";\nimport SEO from \"@components/seo\";\nimport PageBreadcrumb from \"@components/pagebreadcrumb\";\nimport { graphql } from \"gatsby\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport LargeSinglePosts from \"../../components/large-single-post\";\nimport LatestPostArea from \"../../container/latest-post\";\nimport { BlogDetailsArea, BlogDetailsRightSidebar } from \"./style\";\n\nconst DatePosts = ({ data, location, pageContext }) => {\n    return (\n        <Layout>\n            <SEO title={\"Blog Categories Post\"} pathname=\"/\" />\n            <PageBreadcrumb pageContext={pageContext} location={location} />\n            <BlogDetailsArea>\n                <Container>\n                    <Row className=\"gx-5\">\n                        <Col lg={8} md={7}>\n                            <Row>\n                                {data.allMarkdownRemark.edges.map((blog, i) => {\n                                    return (\n                                        <Col lg={12} key={i}>\n                                            <LargeSinglePosts\n                                                title={\n                                                    blog.node.frontmatter.title\n                                                }\n                                                thume_image={\n                                                    blog.node.frontmatter\n                                                        .thume_image\n                                                }\n                                                categories={\n                                                    blog.node.frontmatter\n                                                        .categories\n                                                }\n                                                body={blog.node.excerpt}\n                                                date={\n                                                    blog.node.frontmatter.date\n                                                }\n                                                slug={blog.node.fields.slug}\n                                                authorSlug={\n                                                    blog.node.fields.authorId\n                                                }\n                                                authorId={\n                                                    blog.node.fields.authorId\n                                                }\n                                                dateSlug={\n                                                    blog.node.fields.dateSlug\n                                                }\n                                            />\n                                        </Col>\n                                    );\n                                })}\n                            </Row>\n                        </Col>\n                        <Col lg={4} md={5}>\n                            <BlogDetailsRightSidebar\n                                sx={{ mt: \"-40px !important\" }}\n                            >\n                                <LatestPostArea />\n                            </BlogDetailsRightSidebar>\n                        </Col>\n                    </Row>\n                </Container>\n            </BlogDetailsArea>\n        </Layout>\n    );\n};\n\nDatePosts.propTypes = {\n    data: PropTypes.object,\n    location: PropTypes.object,\n    pageContext: PropTypes.object,\n};\n\nexport const datePostsQuery = graphql`\n    query($dateSlug: Date!) {\n        allMarkdownRemark(\n            sort: { fields: frontmatter___date, order: DESC }\n            filter: { fields: { dateSlug: { eq: $dateSlug } } }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        categories {\n                            name\n                            color\n                        }\n                        date(formatString: \"MMMM DD YYYY\")\n                        tags\n                        quote_text\n                        title\n                        thume_image {\n                            childImageSharp {\n                                gatsbyImageData(width: 850, height: 400)\n                            }\n                        }\n                    }\n                    fields {\n                        slug\n                        authorId\n                        dateSlug\n                    }\n                    excerpt(pruneLength: 240, truncate: true)\n                }\n            }\n        }\n    }\n`;\nexport default DatePosts;\n"],"names":["SingleLatestPost","styled","LatestPostThum","LatestPostContent","Title","LatestPostMeta","PostDate","title","date","thume_image","slug","dateSlug","image","getImage","Link","to","G","alt","className","LatestPostInnerWrap","LatestPostHeader","LatestPostBox","props","sideLatestPostsData","useStaticQuery","latestPost","edges","map","latestPosts","i","key","node","frontmatter","fields","BlogDetailsArea","device","BlogDetailsRightSidebar","data","location","pageContext","pathname","Container","Row","Col","lg","md","allMarkdownRemark","blog","categories","body","excerpt","authorSlug","authorId","sx","mt"],"sourceRoot":""}